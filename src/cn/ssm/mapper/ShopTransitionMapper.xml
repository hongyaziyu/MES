<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ssm.mapper.ShopTransitionMapper" >
  <resultMap id="BaseResultMap" type="cn.ssm.po.ShopTransition" >
    <id column="transition_id" property="transitionId" jdbcType="INTEGER" />
    <result column="plan_no" property="planNo" jdbcType="VARCHAR" />
    <result column="client_material_no" property="clientMaterialNo" jdbcType="VARCHAR" />
    <result column="material_no" property="materialNo" jdbcType="VARCHAR" />
    <result column="batch_no" property="batchNo" jdbcType="VARCHAR" />
    <result column="provider" property="provider" jdbcType="VARCHAR" />
    <result column="shop1" property="shop1" jdbcType="VARCHAR" />
    <result column="acceptor" property="acceptor" jdbcType="VARCHAR" />
    <result column="shop2" property="shop2" jdbcType="VARCHAR" />
    <result column="tran_date" property="tranDate" jdbcType="VARCHAR" />
    <result column="qualified_num" property="qualifiedNum" jdbcType="VARCHAR" />
    <result column="unqualified_num" property="unqualifiedNum" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    transition_id, plan_no, client_material_no, material_no, batch_no, provider, shop1, 
    acceptor, shop2, tran_date, qualified_num, unqualified_num, type, priority
  </sql>
  
  
   <!--部分外协单据记录sql片段 -->
     <sql id="query_selectexterassociation_where">
  	
			<if test="material_no!=null and material_no!=''">
				and  a.material_no like '%${material_no}%'
			</if>
			<if test="start_date!=null and start_date!=''">
				and  a.tran_date BETWEEN #{start_date} AND #{end_date}
			</if>	
			and (a.shop1='外协 'or a.shop2='外协中')
			and a.type=2
			
	</sql> 
	
	
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from shop_transition
    where transition_id = #{transitionId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from shop_transition
    where transition_id = #{transitionId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.ssm.po.ShopTransition" >
    insert into shop_transition (transition_id, plan_no, client_material_no, 
      material_no, batch_no, provider, 
      shop1, acceptor, shop2, 
      tran_date, qualified_num, unqualified_num, 
      type, priority)
    values (#{transitionId,jdbcType=INTEGER}, #{planNo,jdbcType=VARCHAR}, #{clientMaterialNo,jdbcType=VARCHAR}, 
      #{materialNo,jdbcType=VARCHAR}, #{batchNo,jdbcType=VARCHAR}, #{provider,jdbcType=VARCHAR}, 
      #{shop1,jdbcType=VARCHAR}, #{acceptor,jdbcType=VARCHAR}, #{shop2,jdbcType=VARCHAR}, 
      #{tranDate,jdbcType=VARCHAR}, #{qualifiedNum,jdbcType=VARCHAR}, #{unqualifiedNum,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.ssm.po.ShopTransition" >
    insert into shop_transition
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="transitionId != null" >
        transition_id,
      </if>
      <if test="planNo != null" >
        plan_no,
      </if>
      <if test="clientMaterialNo != null" >
        client_material_no,
      </if>
      <if test="materialNo != null" >
        material_no,
      </if>
      <if test="batchNo != null" >
        batch_no,
      </if>
      <if test="provider != null" >
        provider,
      </if>
      <if test="shop1 != null" >
        shop1,
      </if>
      <if test="acceptor != null" >
        acceptor,
      </if>
      <if test="shop2 != null" >
        shop2,
      </if>
      <if test="tranDate != null" >
        tran_date,
      </if>
      <if test="qualifiedNum != null" >
        qualified_num,
      </if>
      <if test="unqualifiedNum != null" >
        unqualified_num,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="priority != null" >
        priority,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="transitionId != null" >
        #{transitionId,jdbcType=INTEGER},
      </if>
      <if test="planNo != null" >
        #{planNo,jdbcType=VARCHAR},
      </if>
      <if test="clientMaterialNo != null" >
        #{clientMaterialNo,jdbcType=VARCHAR},
      </if>
      <if test="materialNo != null" >
        #{materialNo,jdbcType=VARCHAR},
      </if>
      <if test="batchNo != null" >
        #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="provider != null" >
        #{provider,jdbcType=VARCHAR},
      </if>
      <if test="shop1 != null" >
        #{shop1,jdbcType=VARCHAR},
      </if>
      <if test="acceptor != null" >
        #{acceptor,jdbcType=VARCHAR},
      </if>
      <if test="shop2 != null" >
        #{shop2,jdbcType=VARCHAR},
      </if>
      <if test="tranDate != null" >
        #{tranDate,jdbcType=VARCHAR},
      </if>
      <if test="qualifiedNum != null" >
        #{qualifiedNum,jdbcType=VARCHAR},
      </if>
      <if test="unqualifiedNum != null" >
        #{unqualifiedNum,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ssm.po.ShopTransition" >
    update shop_transition
    <set >
      <if test="planNo != null" >
        plan_no = #{planNo,jdbcType=VARCHAR},
      </if>
      <if test="clientMaterialNo != null" >
        client_material_no = #{clientMaterialNo,jdbcType=VARCHAR},
      </if>
      <if test="materialNo != null" >
        material_no = #{materialNo,jdbcType=VARCHAR},
      </if>
      <if test="batchNo != null" >
        batch_no = #{batchNo,jdbcType=VARCHAR},
      </if>
      <if test="provider != null" >
        provider = #{provider,jdbcType=VARCHAR},
      </if>
      <if test="shop1 != null" >
        shop1 = #{shop1,jdbcType=VARCHAR},
      </if>
      <if test="acceptor != null" >
        acceptor = #{acceptor,jdbcType=VARCHAR},
      </if>
      <if test="shop2 != null" >
        shop2 = #{shop2,jdbcType=VARCHAR},
      </if>
      <if test="tranDate != null" >
        tran_date = #{tranDate,jdbcType=VARCHAR},
      </if>
      <if test="qualifiedNum != null" >
        qualified_num = #{qualifiedNum,jdbcType=VARCHAR},
      </if>
      <if test="unqualifiedNum != null" >
        unqualified_num = #{unqualifiedNum,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
    </set>
    where transition_id = #{transitionId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ssm.po.ShopTransition" >
    update shop_transition
    set plan_no = #{planNo,jdbcType=VARCHAR},
      client_material_no = #{clientMaterialNo,jdbcType=VARCHAR},
      material_no = #{materialNo,jdbcType=VARCHAR},
      batch_no = #{batchNo,jdbcType=VARCHAR},
      provider = #{provider,jdbcType=VARCHAR},
      shop1 = #{shop1,jdbcType=VARCHAR},
      acceptor = #{acceptor,jdbcType=VARCHAR},
      shop2 = #{shop2,jdbcType=VARCHAR},
      tran_date = #{tranDate,jdbcType=VARCHAR},
      qualified_num = #{qualifiedNum,jdbcType=VARCHAR},
      unqualified_num = #{unqualifiedNum,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      priority = #{priority,jdbcType=INTEGER}
    where transition_id = #{transitionId,jdbcType=INTEGER}
  </update>
  
  
   
  <!--计划进度查询 -->
  <!--(select max(transition_id) as maxid from shop_transition group by batch_no)子查询，根据shop_transition表中的  batch_no列的最大-->
  <!-- ORDER BY默认为升序排列 -->
  <select id="selectShopTransitionByParam" resultMap="BaseResultMap"  >
    SELECT * FROM shop_transition st WHERE st.transition_id in(select max(transition_id) as maxid from shop_transition group by batch_no)  
    and  plan_no = #{planNo,jdbcType=VARCHAR}
    AND  client_material_no = #{clientMaterialNo,jdbcType=VARCHAR}
    AND   material_no = #{materialNo,jdbcType=VARCHAR}
    ORDER BY st.batch_no 
  </select> 
  
  
   <!--计划进度弹窗 -->
  <!--(select max(transition_id) as maxid from shop_transition group by batch_no)子查询，根据shop_transition表中的  batch_no列的最大-->
  <!-- ORDER BY默认为升序排列 -->
  <select id="selectShopTransitionByParam1" resultMap="BaseResultMap"  >
    SELECT * FROM shop_transition st
    WHERE plan_no = #{planNo,jdbcType=VARCHAR}
    AND  client_material_no = #{clientMaterialNo,jdbcType=VARCHAR}
    AND   material_no = #{materialNo,jdbcType=VARCHAR}
    ORDER BY st.batch_no 
  </select> 
  
  
  
  
   <!--部分外协单据页面:通过物料号，起始时间，截止时间查询-->
  <select  id="selectExterAssociation" resultMap="BaseResultMap">
  select*from shop_transition a 
  <!--把where移出用sql片段判断条件空的情况，实现：查询条件不输入显示全部，输入几个条件按几个条件显示  -->
    <where>
		<include refid="query_selectexterassociation_where"/>
	</where>     
	ORDER BY transition_id DESC
	limit #{startPos},#{pageSize}                                                                                                                                                                                                                                                                   
  </select>
  
  
    <!--部分外协单据页面查询返回行数 -->
  <!--COUNT() 函数返回匹配指定条件的行数。  -->
  <select id="selectExterAssociationtotalCount" resultType="int">
  	select  count(*) from  shop_transition a
  	<where>
		<include refid="query_selectexterassociation_where"/>
	</where>
  </select>
  
  
   <!--部分外协单据excel查询-->
  <select  id="selectexcelExterAssociation" resultMap="BaseResultMap">
  select*from shop_transition a 
  <!--把where移出用sql片段判断条件空的情况，实现：查询条件不输入显示全部，输入几个条件按几个条件显示  -->
    <where>
		<include refid="query_selectexterassociation_where"/>
	</where>     
	ORDER BY transition_id DESC                                                                                                                                                                                                                                                            
  </select>
</mapper>