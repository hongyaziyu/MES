<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ssm.mapper.GetSecDetailMapper" >
  <resultMap id="BaseResultMap" type="cn.ssm.po.GetSecDetail" >
    <id column="detail_id" property="detailId" jdbcType="INTEGER" />
    <result column="get_materials_id" property="getMaterialsId" jdbcType="INTEGER" />
    <result column="reshop_name" property="reshopName" jdbcType="VARCHAR" />
    <result column="sec_material_no" property="secMaterialNo" jdbcType="VARCHAR" />
    <result column="sec_material_name" property="secMaterialName" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="returner" property="returner" jdbcType="VARCHAR" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="is_return" property="isReturn" jdbcType="INTEGER" />
    <result column="is_recorded" property="isRecorded" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    detail_id, get_materials_id, reshop_name, sec_material_no, sec_material_name, type, 
    num, unit, returner, receiver, time, remark, is_return, is_recorded
  </sql>
  
  <!-- 退辅料excel导出T+模板记录sql片段 -->
     <sql id="query_outputexcelSecGetMaterial_where">
  	
			<if test="reshopName!=null and reshopName!=''">
				and  b.reshop_name like '%${reshopName}%'
			</if>
			<if test="start_date!=null and start_date!=''">
				and  b.time BETWEEN #{start_date} AND #{end_date}
			</if>	
			and b.is_return=1    
	</sql> 
	
   <!-- 退辅材料记录sql片段 -->
     <sql id="query_outputSecGetMaterial_where">
  	
			<if test="reshopName!=null and reshopName!=''">
				and  b.reshop_name like '%${reshopName}%'
			</if>
			<if test="start_date!=null and start_date!=''">
				and  b.time BETWEEN #{start_date} AND #{end_date}
			</if>	
			and b.is_return=1
	</sql> 
	
	
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from get_sec_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from get_sec_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.ssm.po.GetSecDetail" >
    insert into get_sec_detail (detail_id, get_materials_id, reshop_name, 
      sec_material_no, sec_material_name, type, 
      num, unit, returner, 
      receiver, time, remark, 
      is_return, is_recorded)
    values (#{detailId,jdbcType=INTEGER}, #{getMaterialsId,jdbcType=INTEGER}, #{reshopName,jdbcType=VARCHAR}, 
      #{secMaterialNo,jdbcType=VARCHAR}, #{secMaterialName,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{num,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{returner,jdbcType=VARCHAR}, 
      #{receiver,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{isReturn,jdbcType=INTEGER}, #{isRecorded,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.ssm.po.GetSecDetail" >
    insert into get_sec_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        detail_id,
      </if>
      <if test="getMaterialsId != null" >
        get_materials_id,
      </if>
      <if test="reshopName != null" >
        reshop_name,
      </if>
      <if test="secMaterialNo != null" >
        sec_material_no,
      </if>
      <if test="secMaterialName != null" >
        sec_material_name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="returner != null" >
        returner,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="isReturn != null" >
        is_return,
      </if>
      <if test="isRecorded != null" >
        is_recorded,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        #{detailId,jdbcType=INTEGER},
      </if>
      <if test="getMaterialsId != null" >
        #{getMaterialsId,jdbcType=INTEGER},
      </if>
      <if test="reshopName != null" >
        #{reshopName,jdbcType=VARCHAR},
      </if>
      <if test="secMaterialNo != null" >
        #{secMaterialNo,jdbcType=VARCHAR},
      </if>
      <if test="secMaterialName != null" >
        #{secMaterialName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="returner != null" >
        #{returner,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isReturn != null" >
        #{isReturn,jdbcType=INTEGER},
      </if>
      <if test="isRecorded != null" >
        #{isRecorded,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.ssm.po.GetSecDetail" >
    update get_sec_detail
    <set >
      <if test="getMaterialsId != null" >
        get_materials_id = #{getMaterialsId,jdbcType=INTEGER},
      </if>
      <if test="reshopName != null" >
        reshop_name = #{reshopName,jdbcType=VARCHAR},
      </if>
      <if test="secMaterialNo != null" >
        sec_material_no = #{secMaterialNo,jdbcType=VARCHAR},
      </if>
      <if test="secMaterialName != null" >
        sec_material_name = #{secMaterialName,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="returner != null" >
        returner = #{returner,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isReturn != null" >
        is_return = #{isReturn,jdbcType=INTEGER},
      </if>
      <if test="isRecorded != null" >
        is_recorded = #{isRecorded,jdbcType=INTEGER},
      </if>
    </set>
    where detail_id = #{detailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.ssm.po.GetSecDetail" >
    update get_sec_detail
    set get_materials_id = #{getMaterialsId,jdbcType=INTEGER},
      reshop_name = #{reshopName,jdbcType=VARCHAR},
      sec_material_no = #{secMaterialNo,jdbcType=VARCHAR},
      sec_material_name = #{secMaterialName,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      num = #{num,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      returner = #{returner,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_return = #{isReturn,jdbcType=INTEGER},
      is_recorded = #{isRecorded,jdbcType=INTEGER}
    where detail_id = #{detailId,jdbcType=INTEGER}
  </update>
  
  <!-- 领料审批查看二表页面get_material_id查询 -->
	<select id="selectByKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select*from
		get_sec_detail
		where get_materials_id=#{0}
		and is_return=0
	</select>
	
	
	<!-- 多表查询的前提条件：where查询条件牵扯到两张表时  退辅料记录分页 -->
  <select  id="selectoutputSecGetMaterial" resultMap="BaseResultMap">
  select*from  get_sec_detail b    
  <where>
		<include refid="query_outputSecGetMaterial_where"/>
 </where>  
      ORDER BY detail_id DESC
	limit #{startPos},#{pageSize}                                                                                                                                                                                                                                                             
  </select>
  
   <!-- 退辅料记录分页查询返回行数 -->
  <!--COUNT() 函数返回匹配指定条件的行数。  -->
  <select id="selectoutputSecGetMaterialtotalCount" resultType="int">
  	select  count(*) from   get_sec_detail b
  	<where>
		<include refid="query_outputSecGetMaterial_where"/>
	</where>
  </select>
  
  
  <!-- 多表查询的前提条件：where查询条件牵扯到两张表时  退辅料记录分页 -->
  <select  id="selectexceloutputSecGetMaterial" resultMap="BaseResultMap">
  select*from  get_sec_detail b 
 	<where>
		<include refid="query_outputexcelSecGetMaterial_where"/>
	</where>                                                                                                                                                                                                                                                          
  </select>
</mapper>